@startuml

' Candidate represents a user applying to jobs.
class Candidate {
  + id: int                      ' Primary key
  + name: string                 ' Full name of the candidate
  + email: string                ' Email address
  + phone: string                ' Contact phone number
  + deleted: boolean             ' Soft deletion flag (default: false)
}

' Company offers job posts and extends job offers.
class Company {
  + id: int                      ' Primary key
  + name: string                 ' Company name
  + industry: string             ' Industry sector
  + location: string             ' Physical location or headquarters
  + github: string               ' GitHub account or repository URL
  + website: string              ' Official website URL
  + job_search_website: string   ' URL for the companyâ€™s recruitment page
  + description: text            ' Detailed company description
  + deleted: boolean             ' Soft deletion flag (default: false)
}

' Role defines the position for a job post.
class Role {
  + id: int                      ' Primary key
  + name: string                 ' Name of the role (e.g., Developer)
  + description: text            ' Detailed description of the role
  + deleted: boolean             ' Soft deletion flag (default: false)
}

' JobPost represents a job posting on the platform.
class JobPost {
  + id: int                      ' Primary key
  + title: string                ' Title of the job post
  + description: text            ' Full description of the job and responsibilities
  + skills_required: string      ' List of required skills (comma-separated)
  + experience: string           ' Required experience level or years of experience
  + location: string             ' Job location
  + relocation: boolean          ' Whether relocation is required or provided
  + apply_from_anywhere: boolean ' Whether applicants can apply remotely
  + remote: RemoteType           ' Remote work option (enum: NO, PARTIAL, FULL)
  + english_level: EnglishType   ' Required English proficiency (enum: BASIC, INTERMEDIATE, BUSINESS_LEVEL)
  + japanese_level: JapaneseType ' Required Japanese proficiency (enum: N5, N4, N3, N2, N1, ADVANCED)
  + salary: decimal              ' Offered salary or salary range
  + employment_type: EmploymentType ' Type of employment (enum: FULL_TIME, PART_TIME, CONTRACT, TEMPORARY, INTERN)
  + posted_at: datetime          ' Date and time when the job was posted
  + closing_date: datetime       ' Application deadline
  + company_id: int              ' Foreign key to Company (which posts the job)
  + role_id: int                 ' Foreign key to Role (the position offered)
  + deleted: boolean             ' Soft deletion flag (default: false)
}

' Resume represents one of the candidate's CVs.
class Resume {
  + id: int                      ' Primary key
  + candidate_id: int            ' Foreign key to Candidate (owner of the resume)
  + title: string                ' Title or label for the resume (e.g., "Technical Resume")
  + latex_source: text           ' LaTeX source code for generating the resume PDF
  + pdf_path: string             ' File path to the generated PDF version
  + resume_type: ResumeType      ' Category/type of resume (enum: DEVELOPER, DESIGNER, MANAGER, ANALYST)
  + deleted: boolean             ' Soft deletion flag (default: false)
}

' CoverLetter represents a cover letter a candidate can create.
class CoverLetter {
  + id: int                      ' Primary key
  + candidate_id: int            ' Foreign key to Candidate (creator of the cover letter)
  + subject: string              ' Subject line of the cover letter
  + latex_source: text           ' LaTeX source code for generating the cover letter PDF
  + pdf_path: string             ' File path to the generated PDF version
  + deleted: boolean             ' Soft deletion flag (default: false)
}

' JobApplication links a candidate (with a Resume and an optional CoverLetter) to a JobPost.
class JobApplication {
  + id: int                      ' Primary key
  + candidate_id: int            ' Foreign key to Candidate (applicant)
  + job_post_id: int             ' Foreign key to JobPost (the job being applied to)
  + resume_id: int               ' Foreign key to Resume used in the application
  + cover_letter_id: int         ' Foreign key to CoverLetter (optional)
  + status: string               ' Status of the application (e.g., pending, accepted)
  + phase: string                ' Current phase (e.g., initial screening, interview)
  + mail: string                 ' Email used for correspondence
  + applied_at: datetime         ' Date and time when the application was submitted
  + feedback: text               ' Feedback or additional notes regarding the application
  + deleted: boolean             ' Soft deletion flag (default: false)
}

' Interview is scheduled for a JobApplication.
class Interview {
  + id: int                      ' Primary key
  + job_application_id: int      ' Foreign key to JobApplication
  + scheduled_date: datetime     ' Date and time for the interview
  + result: string               ' Outcome or result of the interview
  + mode: InterviewMode          ' Mode of interview (enum: IN_PERSON, VIDEO, PHONE)
  + interview_type: InterviewType ' Type of interview (enum: TECHNICAL, HR, FINAL)
  + notes: text                  ' Additional notes about the interview
  + deleted: boolean             ' Soft deletion flag (default: false)
}

' JobOffer represents the actual offer extended by a company.
class JobOffer {
  + id: int                      ' Primary key
  + job_application_id: int      ' Foreign key to JobApplication
  + status: string               ' Current status of the offer (e.g., pending, accepted, declined)
  + salary: decimal              ' Final offered salary (may differ from job post salary)
  + start_date: date             ' Proposed start date for employment
  + offer_date: date             ' Date when the offer was extended
  + message: text                ' Additional details or the official offer message
  + deleted: boolean             ' Soft deletion flag (default: false)
}

' Enums definitions
enum RemoteType {
  NO
  PARTIAL
  FULL
}

enum EnglishType {
  BASIC
  INTERMEDIATE
  BUSINESS_LEVEL
}

enum JapaneseType {
  N5
  N4
  N3
  N2
  N1
  ADVANCED
}

enum EmploymentType {
  FULL_TIME
  PART_TIME
  CONTRACT
  TEMPORARY
  INTERN
}

enum ResumeType {
  DEVELOPER
  DESIGNER
  MANAGER
  ANALYST
}

enum InterviewMode {
  IN_PERSON
  VIDEO
  PHONE
}

enum InterviewType {
  TECHNICAL
  HR
  FINAL
}

' Define relationships
Candidate "1" -- "0..*" Resume : owns
Candidate "1" -- "0..*" CoverLetter : creates
Candidate "1" -- "0..*" JobApplication : applies

Company "1" -- "0..*" JobPost : posts

Role "1" -- "0..*" JobPost : defines

JobPost "1" -- "0..*" JobApplication : receives

JobApplication "1" -- "1" Resume : uses
JobApplication "0..1" -- "1" CoverLetter : includes
JobApplication "1" -- "0..*" Interview : triggers
JobApplication "1" -- "0..*" JobOffer : may_have

@enduml
